"""new migration

Revision ID: b863edc7e69e
Revises: 
Create Date: 2025-10-09 23:06:36.743352

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b863edc7e69e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_reset_token', sa.String(length=255), nullable=True),
    sa.Column('password_reset_expires', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('length(email) >= 5', name='ck_user_email_length'),
    sa.CheckConstraint('length(name) >= 2', name='ck_user_name_length'),
    sa.CheckConstraint('length(username) >= 3', name='ck_user_username_length'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='uq_user_email'),
    sa.UniqueConstraint('username', name='uq_user_username')
    )
    op.create_index('idx_user_created_at', 'users', ['created_at'], unique=False)
    op.create_index('idx_user_email_active', 'users', ['email', 'is_active'], unique=False)
    op.create_index('idx_user_last_login', 'users', ['last_login'], unique=False)
    op.create_index('idx_user_username_active', 'users', ['username', 'is_active'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_password_reset_token'), 'users', ['password_reset_token'], unique=False)
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('studies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('background', sa.Text(), nullable=False),
    sa.Column('language', sa.String(length=10), server_default='en', nullable=False),
    sa.Column('main_question', sa.Text(), nullable=False),
    sa.Column('orientation_text', sa.Text(), nullable=False),
    sa.Column('study_type', sa.Enum('grid', 'layer', name='study_type_enum'), nullable=False),
    sa.Column('rating_scale', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('iped_parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('tasks', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('creator_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('draft', 'active', 'paused', 'completed', name='study_status_enum'), server_default='draft', nullable=False),
    sa.Column('share_token', sa.String(length=255), nullable=False),
    sa.Column('share_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('launched_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_responses', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('completed_responses', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('abandoned_responses', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('share_token', name='uq_studies_share_token')
    )
    op.create_index('idx_studies_creator_status_created_at', 'studies', ['creator_id', 'status', 'created_at'], unique=False)
    op.create_index('idx_studies_status_created_at', 'studies', ['status', 'created_at'], unique=False)
    op.create_index('idx_studies_study_type', 'studies', ['study_type'], unique=False)
    op.create_index(op.f('ix_studies_creator_id'), 'studies', ['creator_id'], unique=False)
    op.create_index(op.f('ix_studies_id'), 'studies', ['id'], unique=False)
    op.create_index(op.f('ix_studies_share_token'), 'studies', ['share_token'], unique=True)
    op.create_table('study_categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('study_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['study_id'], ['studies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('study_id', 'category_id', name='uq_study_categories_category_id')
    )
    op.create_index('idx_study_categories_study_id_category_id', 'study_categories', ['study_id', 'category_id'], unique=False)
    op.create_index('idx_study_categories_study_id_order', 'study_categories', ['study_id', 'order'], unique=False)
    op.create_index(op.f('ix_study_categories_study_id'), 'study_categories', ['study_id'], unique=False)
    op.create_table('study_classification_questions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('study_id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.String(length=10), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('question_type', sa.String(length=20), nullable=False),
    sa.Column('is_required', sa.String(length=1), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('answer_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['studies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('study_id', 'question_id', name='uq_study_classification_questions_question_id')
    )
    op.create_index('idx_study_classification_questions_study_id_order', 'study_classification_questions', ['study_id', 'order'], unique=False)
    op.create_index(op.f('ix_study_classification_questions_study_id'), 'study_classification_questions', ['study_id'], unique=False)
    op.create_table('study_layers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('study_id', sa.UUID(), nullable=False),
    sa.Column('layer_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('z_index', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['study_id'], ['studies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('study_id', 'layer_id', name='uq_study_layers_layer_id')
    )
    op.create_index('idx_study_layers_study_id_layer_id', 'study_layers', ['study_id', 'layer_id'], unique=False)
    op.create_index(op.f('ix_study_layers_study_id'), 'study_layers', ['study_id'], unique=False)
    op.create_table('study_responses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('study_id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.String(length=50), nullable=False),
    sa.Column('respondent_id', sa.Integer(), nullable=False),
    sa.Column('current_task_index', sa.Integer(), nullable=True),
    sa.Column('completed_tasks_count', sa.Integer(), nullable=True),
    sa.Column('total_tasks_assigned', sa.Integer(), nullable=False),
    sa.Column('session_start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('session_end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('personal_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('browser_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('completion_percentage', sa.Float(), nullable=True),
    sa.Column('total_study_duration', sa.Float(), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_abandoned', sa.Boolean(), nullable=True),
    sa.Column('abandonment_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('abandonment_reason', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['studies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_study_response_abandoned', 'study_responses', ['is_abandoned'], unique=False)
    op.create_index('idx_study_response_activity', 'study_responses', ['last_activity'], unique=False)
    op.create_index('idx_study_response_analytics', 'study_responses', ['study_id', 'is_completed', 'is_abandoned'], unique=False)
    op.create_index('idx_study_response_completed', 'study_responses', ['is_completed'], unique=False)
    op.create_index('idx_study_response_duration', 'study_responses', ['study_id', 'total_study_duration'], unique=False)
    op.create_index('idx_study_response_respondent', 'study_responses', ['respondent_id'], unique=False)
    op.create_index('idx_study_response_session', 'study_responses', ['session_id'], unique=False)
    op.create_index('idx_study_response_start_time', 'study_responses', ['session_start_time'], unique=False)
    op.create_index('idx_study_response_study', 'study_responses', ['study_id'], unique=False)
    op.create_index(op.f('ix_study_responses_id'), 'study_responses', ['id'], unique=False)
    op.create_index(op.f('ix_study_responses_session_id'), 'study_responses', ['session_id'], unique=True)
    op.create_index(op.f('ix_study_responses_status'), 'study_responses', ['status'], unique=False)
    op.create_index(op.f('ix_study_responses_study_id'), 'study_responses', ['study_id'], unique=False)
    op.create_table('classification_answers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('study_response_id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.String(length=10), nullable=False),
    sa.Column('question_text', sa.String(length=500), nullable=False),
    sa.Column('answer', sa.String(length=1000), nullable=False),
    sa.Column('answer_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('time_spent_seconds', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['study_response_id'], ['study_responses.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_classification_question', 'classification_answers', ['question_id'], unique=False)
    op.create_index('idx_classification_response', 'classification_answers', ['study_response_id'], unique=False)
    op.create_index(op.f('ix_classification_answers_id'), 'classification_answers', ['id'], unique=False)
    op.create_index(op.f('ix_classification_answers_study_response_id'), 'classification_answers', ['study_response_id'], unique=False)
    op.create_table('completed_tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('study_response_id', sa.UUID(), nullable=False),
    sa.Column('task_id', sa.String(length=20), nullable=False),
    sa.Column('respondent_id', sa.Integer(), nullable=False),
    sa.Column('task_index', sa.Integer(), nullable=False),
    sa.Column('elements_shown_in_task', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('elements_shown_content', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('task_type', sa.String(length=50), nullable=True),
    sa.Column('task_context', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('task_start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('task_completion_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('task_duration_seconds', sa.Float(), nullable=False),
    sa.Column('rating_given', sa.Integer(), nullable=False),
    sa.Column('rating_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('elements_shown', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('layers_shown_in_task', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['study_response_id'], ['study_responses.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_completed_task_analytics', 'completed_tasks', ['study_response_id', 'task_duration_seconds'], unique=False)
    op.create_index('idx_completed_task_id', 'completed_tasks', ['task_id'], unique=False)
    op.create_index('idx_completed_task_respondent', 'completed_tasks', ['respondent_id'], unique=False)
    op.create_index('idx_completed_task_response', 'completed_tasks', ['study_response_id'], unique=False)
    op.create_index(op.f('ix_completed_tasks_id'), 'completed_tasks', ['id'], unique=False)
    op.create_index(op.f('ix_completed_tasks_study_response_id'), 'completed_tasks', ['study_response_id'], unique=False)
    op.create_table('layer_images',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('layer_id', sa.UUID(), nullable=False),
    sa.Column('image_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('cloudinary_public_id', sa.Text(), nullable=True),
    sa.Column('alt_text', sa.String(length=200), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['layer_id'], ['study_layers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('layer_id', 'image_id', name='uq_layer_images_image_id')
    )
    op.create_index('idx_layer_images_layer_id_image_id', 'layer_images', ['layer_id', 'image_id'], unique=False)
    op.create_index(op.f('ix_layer_images_layer_id'), 'layer_images', ['layer_id'], unique=False)
    op.create_table('study_elements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('study_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('element_id', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('element_type', sa.Enum('image', 'text', name='element_type_enum'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('cloudinary_public_id', sa.Text(), nullable=True),
    sa.Column('alt_text', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['study_categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['study_id'], ['studies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('study_id', 'element_id', name='uq_study_elements_element_id')
    )
    op.create_index('idx_study_elements_category_id', 'study_elements', ['category_id'], unique=False)
    op.create_index('idx_study_elements_study_id_element_id', 'study_elements', ['study_id', 'element_id'], unique=False)
    op.create_index(op.f('ix_study_elements_category_id'), 'study_elements', ['category_id'], unique=False)
    op.create_index(op.f('ix_study_elements_study_id'), 'study_elements', ['study_id'], unique=False)
    op.create_table('task_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.String(length=50), nullable=False),
    sa.Column('task_id', sa.String(length=20), nullable=False),
    sa.Column('study_response_id', sa.UUID(), nullable=False),
    sa.Column('classification_page_time', sa.Float(), nullable=True),
    sa.Column('orientation_page_time', sa.Float(), nullable=True),
    sa.Column('individual_task_page_times', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('page_transitions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('abandonment_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('abandonment_reason', sa.String(length=200), nullable=True),
    sa.Column('recovery_attempts', sa.Integer(), nullable=True),
    sa.Column('browser_performance', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('page_load_times', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('device_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('screen_resolution', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['study_response_id'], ['study_responses.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_task_session_completed', 'task_sessions', ['is_completed'], unique=False)
    op.create_index('idx_task_session_created', 'task_sessions', ['created_at'], unique=False)
    op.create_index('idx_task_session_response', 'task_sessions', ['study_response_id'], unique=False)
    op.create_index('idx_task_session_session', 'task_sessions', ['session_id'], unique=False)
    op.create_index('idx_task_session_task', 'task_sessions', ['task_id'], unique=False)
    op.create_index(op.f('ix_task_sessions_id'), 'task_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_task_sessions_session_id'), 'task_sessions', ['session_id'], unique=False)
    op.create_index(op.f('ix_task_sessions_study_response_id'), 'task_sessions', ['study_response_id'], unique=False)
    op.create_index(op.f('ix_task_sessions_task_id'), 'task_sessions', ['task_id'], unique=False)
    op.create_table('element_interactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('study_response_id', sa.UUID(), nullable=False),
    sa.Column('task_session_id', sa.UUID(), nullable=True),
    sa.Column('element_id', sa.String(length=10), nullable=False),
    sa.Column('view_time_seconds', sa.Float(), nullable=False),
    sa.Column('hover_count', sa.Integer(), nullable=True),
    sa.Column('click_count', sa.Integer(), nullable=True),
    sa.Column('first_view_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_view_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['study_response_id'], ['study_responses.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_session_id'], ['task_sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_element_interaction_analytics', 'element_interactions', ['study_response_id', 'element_id'], unique=False)
    op.create_index('idx_element_interaction_element', 'element_interactions', ['element_id'], unique=False)
    op.create_index('idx_element_interaction_response', 'element_interactions', ['study_response_id'], unique=False)
    op.create_index('idx_element_interaction_task', 'element_interactions', ['task_session_id'], unique=False)
    op.create_index(op.f('ix_element_interactions_id'), 'element_interactions', ['id'], unique=False)
    op.create_index(op.f('ix_element_interactions_study_response_id'), 'element_interactions', ['study_response_id'], unique=False)
    op.create_index(op.f('ix_element_interactions_task_session_id'), 'element_interactions', ['task_session_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_element_interactions_task_session_id'), table_name='element_interactions')
    op.drop_index(op.f('ix_element_interactions_study_response_id'), table_name='element_interactions')
    op.drop_index(op.f('ix_element_interactions_id'), table_name='element_interactions')
    op.drop_index('idx_element_interaction_task', table_name='element_interactions')
    op.drop_index('idx_element_interaction_response', table_name='element_interactions')
    op.drop_index('idx_element_interaction_element', table_name='element_interactions')
    op.drop_index('idx_element_interaction_analytics', table_name='element_interactions')
    op.drop_table('element_interactions')
    op.drop_index(op.f('ix_task_sessions_task_id'), table_name='task_sessions')
    op.drop_index(op.f('ix_task_sessions_study_response_id'), table_name='task_sessions')
    op.drop_index(op.f('ix_task_sessions_session_id'), table_name='task_sessions')
    op.drop_index(op.f('ix_task_sessions_id'), table_name='task_sessions')
    op.drop_index('idx_task_session_task', table_name='task_sessions')
    op.drop_index('idx_task_session_session', table_name='task_sessions')
    op.drop_index('idx_task_session_response', table_name='task_sessions')
    op.drop_index('idx_task_session_created', table_name='task_sessions')
    op.drop_index('idx_task_session_completed', table_name='task_sessions')
    op.drop_table('task_sessions')
    op.drop_index(op.f('ix_study_elements_study_id'), table_name='study_elements')
    op.drop_index(op.f('ix_study_elements_category_id'), table_name='study_elements')
    op.drop_index('idx_study_elements_study_id_element_id', table_name='study_elements')
    op.drop_index('idx_study_elements_category_id', table_name='study_elements')
    op.drop_table('study_elements')
    op.drop_index(op.f('ix_layer_images_layer_id'), table_name='layer_images')
    op.drop_index('idx_layer_images_layer_id_image_id', table_name='layer_images')
    op.drop_table('layer_images')
    op.drop_index(op.f('ix_completed_tasks_study_response_id'), table_name='completed_tasks')
    op.drop_index(op.f('ix_completed_tasks_id'), table_name='completed_tasks')
    op.drop_index('idx_completed_task_response', table_name='completed_tasks')
    op.drop_index('idx_completed_task_respondent', table_name='completed_tasks')
    op.drop_index('idx_completed_task_id', table_name='completed_tasks')
    op.drop_index('idx_completed_task_analytics', table_name='completed_tasks')
    op.drop_table('completed_tasks')
    op.drop_index(op.f('ix_classification_answers_study_response_id'), table_name='classification_answers')
    op.drop_index(op.f('ix_classification_answers_id'), table_name='classification_answers')
    op.drop_index('idx_classification_response', table_name='classification_answers')
    op.drop_index('idx_classification_question', table_name='classification_answers')
    op.drop_table('classification_answers')
    op.drop_index(op.f('ix_study_responses_study_id'), table_name='study_responses')
    op.drop_index(op.f('ix_study_responses_status'), table_name='study_responses')
    op.drop_index(op.f('ix_study_responses_session_id'), table_name='study_responses')
    op.drop_index(op.f('ix_study_responses_id'), table_name='study_responses')
    op.drop_index('idx_study_response_study', table_name='study_responses')
    op.drop_index('idx_study_response_start_time', table_name='study_responses')
    op.drop_index('idx_study_response_session', table_name='study_responses')
    op.drop_index('idx_study_response_respondent', table_name='study_responses')
    op.drop_index('idx_study_response_duration', table_name='study_responses')
    op.drop_index('idx_study_response_completed', table_name='study_responses')
    op.drop_index('idx_study_response_analytics', table_name='study_responses')
    op.drop_index('idx_study_response_activity', table_name='study_responses')
    op.drop_index('idx_study_response_abandoned', table_name='study_responses')
    op.drop_table('study_responses')
    op.drop_index(op.f('ix_study_layers_study_id'), table_name='study_layers')
    op.drop_index('idx_study_layers_study_id_layer_id', table_name='study_layers')
    op.drop_table('study_layers')
    op.drop_index(op.f('ix_study_classification_questions_study_id'), table_name='study_classification_questions')
    op.drop_index('idx_study_classification_questions_study_id_order', table_name='study_classification_questions')
    op.drop_table('study_classification_questions')
    op.drop_index(op.f('ix_study_categories_study_id'), table_name='study_categories')
    op.drop_index('idx_study_categories_study_id_order', table_name='study_categories')
    op.drop_index('idx_study_categories_study_id_category_id', table_name='study_categories')
    op.drop_table('study_categories')
    op.drop_index(op.f('ix_studies_share_token'), table_name='studies')
    op.drop_index(op.f('ix_studies_id'), table_name='studies')
    op.drop_index(op.f('ix_studies_creator_id'), table_name='studies')
    op.drop_index('idx_studies_study_type', table_name='studies')
    op.drop_index('idx_studies_status_created_at', table_name='studies')
    op.drop_index('idx_studies_creator_status_created_at', table_name='studies')
    op.drop_table('studies')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_index(op.f('ix_users_password_reset_token'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_user_username_active', table_name='users')
    op.drop_index('idx_user_last_login', table_name='users')
    op.drop_index('idx_user_email_active', table_name='users')
    op.drop_index('idx_user_created_at', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
